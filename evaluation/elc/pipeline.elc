main args =                             // Main function
(if (< (len args) 4)                    // Check command-line args
  "Usage: pipeline.elc nitems comp port itemsize services...\n"
(letrec
  nitems = (ston (item 0 args))         // Process command-line args,
  compms = (ston (item 1 args))         // using ston to convert strings
  port = (ston (item 2 args))           // to numbers for numeric args
  itemsize = (ston (item 3 args))
  services = (skip 4 args)              // Remaining args: service hosts

  input = (genstring itemsize)          // Generate input string of
                                        // requested size

  inputlist = (map (!n.input)           // Create input list with n
                   (range 1 nitems))    // copies of input string

  callservice host value =              // Service stub function:
    (tail                               // Ignore first response char (.)
    (connect host port                  // Connect to specified server
    (mkrequest compms value)))          // and send request

  pipeline stages arg =
    (if stages                          // If more stages remain, call
        (callservice                    // the service for the current
          (head stages)                 // stage, passing the result of
          (pipeline (tail stages) arg)) // the previous stage as input
        arg)                            // Else return initial input

  result = (map (pipeline services)     // Invoke pipeline for each item
                inputlist)              // in input list
in
  (foldr ++ "END\n" result)))           // Print result list, terminated
                                        // by "END" to confirm completion

mkrequest compms value =                // Produce request body: amount
(++ (ntos compms) (++ " " value))       // of computation + input value
