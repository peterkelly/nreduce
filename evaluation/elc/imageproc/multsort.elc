foldr f base lst =
(if lst
  (f (head lst) (foldr f base (tail lst)))
  base)

mergesort cmp m =
(if (<= (len m) 1)
  m
  (letrec
    middle = (floor (/ (len m) 2))
    left = (prefix middle m)
    right = (skip middle m)
    left2 = (mergesort cmp left)
    right2 = (mergesort cmp right)
  in
    (merge cmp left2 right2 nil)))

merge cmp xlst ylst out =
(if xlst
  (if ylst
    (letrec
      x = (head xlst)
      y = (head ylst)
     in
      (if (> (cmp x y) 0)
        (merge cmp xlst (tail ylst) (cons y out))
        (merge cmp (tail xlst) ylst (cons x out))))
    (merge cmp (tail xlst) ylst (cons (head xlst) out)))
  (if ylst
    (merge cmp xlst (tail ylst) (cons (head ylst) out))
    (reverse out)))

resize width height image =
(connect "localhost" 1234
(++ "resize " (++ (numtostring width) (++ " " (++ (numtostring height) (++ "\n"
(++ (numtostring (len image)) (++ "\n" image))))))))

combine images =
(connect "localhost" 1234
(++ "combine " (++ (numtostring (len images)) (++ "\n"
(foldr ++ nil
  (map (!image.++ (numtostring (len image)) (++ "\n" image))
       images))))))

parse1 str start count =
(if str
  (if (isspace (head str))
    (cons (stringtonum (prefix count start)) (parse1 (tail str) (tail str) 0))
    (parse1 (tail str) start (+ count 1)))
  (if (> count 0)
    (cons (stringtonum (prefix count start)) nil)
    nil))

parse str = (parse1 str str 0)

analyze image =
(parse
(connect "localhost" 1234
(++ "analyze\n"
(++ (numtostring (len image)) (++ "\n" image)))))

get_width fields = (item 0 fields)
get_height fields = (item 1 fields)
get_hue fields = (item 2 fields)
get_saturation fields = (item 3 fields)
get_value fields = (item 4 fields)
get_whue fields = (item 5 fields)

huecmp x y =
(- (get_whue (head x)) (get_whue (head y)))

valcmp x y =
(- (get_value (head x)) (get_value (head y)))

main args =
(if (< (len args) 1)
  "Usage: multsort <filenames...>\n"
(letrec
  images = (map readb args)
  resized = (map (resize 60 60) images)
  analyzed = (map (!image.cons (analyze image) image) resized)
in
  (combine
    (cons (combine (map tail (mergesort huecmp analyzed)))
    (cons (combine (map tail (mergesort valcmp analyzed))) nil)))))
