main args =                          // Main function
(if (< (len args) 5)                 // Check command-line args
  "Usage: nested.elc host port size compms itemsize\n"
(letrec
  host = (item 0 args)               // Process command-line args,
  port = (ston (item 1 args))        // using ston to convert strings
  size = (ston (item 2 args))        // to numbers for numeric args
  compms = (ston (item 3 args))
  itemsize = (ston (item 4 args))

  callservice n =                    // Service stub function -
    (connect host port               // connect to specified server
    (mkrequest compms n))            // and send request

  input = (genstring itemsize)       // Generate array element content
                                     // of requested size

  array = (create2darray size input) // Construct size*size input array

  result =
    (map (!row.map callservice row)  // For each column in each row,
         array)                      // call the service
in
  (++ (str2darray result)            // Print output array, terminated
      "END\n")))                     // by "END" to confirm completion


str2darray array =                   // Array to string: Loop over rows
(foldr ++ ""                         // and columns, concatenating column
       (map (!row.foldr ++ "\n" row) // elements on a single line, and
            array))                  // row elements on separate lines

create2darray size content =         // Create input array:
(map (!row.map (!col.++ (ntos row)   // For each row and column, create
                    (++ " "          // array element containing row num,
                    (++ (ntos col)   // column num, and input string
                    (++ " " content))))
               (range 1 size))
     (range 1 size))

mkrequest ms data =                  // Build request:
(++ (ntos ms)                        // Send no. ms of computation, and
(++ " " data))                       // input data to be echoed back
