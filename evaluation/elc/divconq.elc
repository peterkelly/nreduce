main args =                             // Main function
(if (< (len args) 5)                    // Check command-line args
  "Usage: divconq.elc host port nitems compms itemsize\n"
(letrec
  host = (item 0 args)                  // Process command-line args,
  port = (ston (item 1 args))           // using ston to convert strings
  nitems = (ston (item 2 args))         // to numbers for numeric args
  compms = (ston (item 3 args))
  itemsize = (ston (item 4 args))

  input = (genstring itemsize)          // Generate input string of
                                        // requested size

  inputlist = (map (!n.input)           // Create input list with n
                   (range 1 nitems))    // copies of input string

  callservice x y =                     // Service stub function -
   (connect host port                   // concatenate args and
            (++ (ntos compms)           // pass to service
            (++ " " (++ x y))))

  result = (divconq callservice         // Apply divide and conquer using
                    inputlist)          // callservice as the combining
                                        // function
in
  (++ result                            // Print result, terminated by
      "\nEND\n")))                      // "END" to confirm completion

divconq f lst =                         // Divide and conquer function
                                        // (f is the combining function)

(if (== (len lst) 1)                    // Single item: return it
    (head lst)
(if (== (len lst) 2)                    // Exactly two items:
    (f (item 0 lst)                     // combine them
       (item 1 lst))
(letrec                                 // More than two items:
  mid = (floor (/ (len lst) 2))         // Split list in half
  right = (- (len lst) mid)
in                                      // Solve recursively, and
  (f (divconq f (sub 0 mid lst))        // combine results
     (divconq f (sub mid right lst))))))
