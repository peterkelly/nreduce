Schema Component Constraint: Particle Valid (Restriction)

Rule 2.2 - Ignoring pointless particles

Note... the output in this test is not actually valid XML schema, because an
<all> is included directly within a <choice>. However, pointless particles are
only used internally and never output during normal operation so this is ok.

=================================== PROGRAM ====================================
testxmlschema -o ct1
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="xsd:anyType">
        <xsd:choice>
          <xsd:element name="element1"/>
          <xsd:element name="element2"/>
          <xsd:group ref="mgd1"/>
          <xsd:element name="element5"/>
          <xsd:element name="element6"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="mgd1">
    <xsd:all>
      <xsd:element name="element3"/>
      <xsd:element name="element4"/>
    </xsd:all>
  </xsd:group>
</xsd:schema>
==================================== OUTPUT ====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:choice>
      <xsd:element name="element1"/>
      <xsd:element name="element2"/>
      <xsd:all>
        <xsd:element name="element3"/>
        <xsd:element name="element4"/>
      </xsd:all>
      <xsd:element name="element5"/>
      <xsd:element name="element6"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:group name="mgd1">
    <xsd:all>
      <xsd:element name="element3"/>
      <xsd:element name="element4"/>
    </xsd:all>
  </xsd:group>
</xsd:schema>
================================== RETURN CODE =================================
0
