Schema Component Constraint: Particle Derivation OK (Sequence:All -- RecurseUnordered)

rcase-RecurseUnordered.1

ct2 is a valid derivation of ct1, because the sequence in the derived type
specifies the same occurrence range as the all in the base type

=================================== PROGRAM ====================================
testxmlschema
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="ct2">
        <xsd:sequence maxOccurs="1" minOccurs="0">
          <xsd:element name="element1"/>
          <xsd:element name="element2"/>
          <xsd:element name="element3"/>
        </xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ct2">
    <xsd:all maxOccurs="1" minOccurs="0">
      <xsd:element name="element1"/>
      <xsd:element name="element2"/>
      <xsd:element name="element3"/>
    </xsd:all>
  </xsd:complexType>
</xsd:schema>
==================================== OUTPUT ====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="ct2">
        <xsd:sequence minOccurs="0">
          <xsd:element name="element1"/>
          <xsd:element name="element2"/>
          <xsd:element name="element3"/>
        </xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ct2">
    <xsd:all minOccurs="0">
      <xsd:element name="element1"/>
      <xsd:element name="element2"/>
      <xsd:element name="element3"/>
    </xsd:all>
  </xsd:complexType>
</xsd:schema>
================================== RETURN CODE =================================
0
