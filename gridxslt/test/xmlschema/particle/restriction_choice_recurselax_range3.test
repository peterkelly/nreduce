Schema Component Constraint: Particle Derivation OK (Choice:Choice -- RecurseLax)

rcase-RecurseLax.1

ct2 is a valid derivation of ct1, because the choice in the derived type
specifies an occurrence range that is a valid restriction of the one in the
base type

=================================== PROGRAM ====================================
testxmlschema
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="ct2">
        <xsd:choice maxOccurs="6" minOccurs="5">
          <xsd:element name="element1"/>
          <xsd:element name="element2"/>
          <xsd:element name="element3"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ct2">
    <xsd:choice maxOccurs="7" minOccurs="4">
      <xsd:element name="element1"/>
      <xsd:element name="element2"/>
      <xsd:element name="element3"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>
==================================== OUTPUT ====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="ct2">
        <xsd:choice maxOccurs="6" minOccurs="5">
          <xsd:element name="element1"/>
          <xsd:element name="element2"/>
          <xsd:element name="element3"/>
        </xsd:choice>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ct2">
    <xsd:choice maxOccurs="7" minOccurs="4">
      <xsd:element name="element1"/>
      <xsd:element name="element2"/>
      <xsd:element name="element3"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>
================================== RETURN CODE =================================
0
