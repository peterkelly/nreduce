Complex type with a <choice> model group

=================================== PROGRAM ====================================
genbindings -c
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="test">
    <xsd:choice>
      <xsd:element name="a" type="xsd:int"/>
      <xsd:element name="b" type="xsd:int"/>
      <xsd:element name="c" type="xsd:int"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>
==================================== OUTPUT ====================================
typedef struct XMLtest XMLtest;

#define XMLtest_a 1
#define XMLtest_b 2
#define XMLtest_c 3

struct XMLtest {
  int valtype;
  union {
    int a;
    int b;
    int c;
  } val;
} __attribute__((__packed__));
/* complex type - 8 bytes */

================================== RETURN CODE =================================
0
