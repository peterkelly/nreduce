Complex type attribute wildcard of a derived type. For <restriction>, the
derived type takes the local attribute wildcard as-is, regardless of any
attribute wildcard that the base type may have.

This test is the same as complextype_cc_wildcard1.test, except it tests the
simple content case. All other tests for type attribute wildcards are in
complextype_cc_wildcard*.test.

=================================== PROGRAM ====================================
testxmlschema -w
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:simpleContent>
      <xsd:restriction base="ct2">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string"/>
        </xsd:simpleType>
        <xsd:anyAttribute namespace="http://ns3.org http://ns2.org"
                          processContents="lax"/>
      </xsd:restriction>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ct2" mixed="true">
    <xsd:anyAttribute namespace="http://ns1.org http://ns2.org http://ns3.org"
                      processContents="skip"/>
  </xsd:complexType>
</xsd:schema>
==================================== OUTPUT ====================================
Attribute wildcard for type ct1:
Wildcard
  Namespace constraint type: set
  Namespace not value: (absent)
  Namespace list:
    http://ns3.org
    http://ns2.org
  Process contents: lax
  Annotation: (none)

Attribute wildcard for type ct2:
Wildcard
  Namespace constraint type: set
  Namespace not value: (absent)
  Namespace list:
    http://ns1.org
    http://ns2.org
    http://ns3.org
  Process contents: skip
  Annotation: (none)
================================== RETURN CODE =================================
0
