Complex type that specifies an attribute that is already declared on the base.
Only the locally declared version should end up in the type's attribute uses
list.

This is the same test as complextype_attribute_d_base.test, but outputs
in XML instead of dump format. This is just to check that we are only outputting
the locally declared attributes.

=================================== PROGRAM ====================================
testxmlschema
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="ct2">
        <xsd:attribute name="attribute1"/>
        <xsd:attribute name="attribute2" default="bar"/>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ct2">
    <xsd:attribute name="attribute2" default="foo"/>
    <xsd:attribute name="attribute3"/>
  </xsd:complexType>
</xsd:schema>
==================================== OUTPUT ====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="ct1">
    <xsd:complexContent>
      <xsd:restriction base="ct2">
        <xsd:attribute name="attribute1"/>
        <xsd:attribute name="attribute2" default="bar"/>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ct2">
    <xsd:attribute name="attribute2" default="foo"/>
    <xsd:attribute name="attribute3"/>
  </xsd:complexType>
</xsd:schema>
================================== RETURN CODE =================================
0
