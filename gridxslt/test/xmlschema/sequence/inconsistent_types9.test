Two elements within the same model group that have the same name but different
types, where the conflict arises because one element is *implicitly* included
within the model group by virtue of its presence in the same substitution group
as another element which is included directly in the model group.

In case this wasn't complicated enough, in this situation the second element is
included indirectly within another's substitution group because the head it
references is the same as the head referenced from the  element that is actually
included in the model group.

=================================== PROGRAM ====================================
testxmlschema
==================================== INPUT =====================================
<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:element name="element4" substitutionGroup="element5">
    <xsd:complexType>
      <xsd:sequence/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="element5"/>
  <xsd:element name="element1" substitutionGroup="element5"/>
  <xsd:complexType name="ct1">
    <xsd:sequence>
      <xsd:element name="element1" type="xsd:integer"/>
      <xsd:choice>
        <xsd:element ref="element4"/>
        <xsd:element name="element3" type="xsd:string"/>
      </xsd:choice>
      <xsd:element name="element2" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
==================================== OUTPUT ====================================
runtests.tmp/input.xml:9: error cos-element-consistent: inconsistent element declarations found for element1: types {http://www.w3.org/2001/XMLSchema}anyType and {http://www.w3.org/2001/XMLSchema}integer are not the same top-level type declaration; both elements must have the same type for them to be used within the same model group
================================== RETURN CODE =================================
1
