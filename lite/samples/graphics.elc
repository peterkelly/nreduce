drawrect g val x y w h =
(letrec
  hue = (/ val 64)
  rgb = (jcall "java.awt.Color" "HSBtoRGB" (cons hue (cons 1.0 (cons 1.0 nil))))
  col = (if (>= val 64)
            (jnew "java.awt.Color" (cons 0 nil))
            (jnew "java.awt.Color" (cons rgb nil)))
in
  (seq (jcall g "setColor" (cons col nil))
  (seq (jcall g "fillRect" (cons x (cons y (cons w (cons h nil)))))
       nil)))

main =
(letrec
   frame = (jnew "javax.swing.JFrame" (cons "Mandelbrot" nil))
   cp = (jcall frame "getContentPane" nil)
   g = (jcall cp "getGraphics" nil)
  in
   (seq (jcall frame "setSize" (cons 500 (cons 500 nil)))
   (seq (jcall frame "show" nil)
   (seq (domandel g)
        nil))))

mandel Zr Zi Cr Ci iterations res =
(if (== res iterations)
    res
    (letrec newZr = (+ (- (* Zr Zr) (* Zi Zi)) Cr)
            newZi = (+ (* 2.0 (* Zr Zi)) Ci)
            mag = (sqrt (+ (* newZr newZr) (* newZi newZi)))
     in
         (if (> mag 2.0)
             res
             (mandel newZr newZi Cr Ci iterations (+ res 1)))))

mandel0 Cr Ci iterations =
(mandel 0.0 0.0 Cr Ci iterations 0)

mloop g xp yp =
(if (> xp 500)
    (if (> yp 500)
        nil
        (mloop g 0 (+ yp 4)))
    (letrec
      mx = (- (/ xp 200) 1.85)
      my = (- (/ yp 200) 1.2)
      val = (mandel0 mx my 64)
     in
    (seq (drawrect g val xp yp 4 4)
         (mloop g (+ xp 4) yp))))

domandel g =
(mloop g 0 0)
