foo should be strict in b, e, f, g, h, k, and l, because these are used in
a strict context (mostly by virtue of their presence in letrec bindings which
are used in a strict context). i and j however are *not* part of a binding
that is used in a strict context, therefore the function should not be strict
in them.
=================================== PROGRAM ====================================
nreduce -r runtests.tmp/test.l
===================================== FILE =====================================
test.l
(foo (a b c d e f g h i j k l)
  (let ((u (+ k l))
        (v (* u (+ i j)))
        (w (* u (+ g h)))
        (x (* w (+ e f))))
        (+ b x)))

(main () nil)
==================================== OUTPUT ====================================
foo a !b c d !e !f !g !h i j !k !l = let ((u! (+ k l))
                                          (v (* u (+ i j)))
                                          (w! (* u (+ g h)))
                                          (x! (* w (+ e f))))
                                         (+ b x)
main = nil
================================== RETURN CODE =================================
0
