foo should be strict in b, e, f, g, h, k, and l, because these are used in
a strict context (mostly by virtue of their presence in letrec bindings which
are used in a strict context). i and j however are *not* part of a binding
that is used in a strict context, therefore the function should not be strict
in them.
=================================== PROGRAM ====================================
nreduce -n -r runtests.tmp/test.l
===================================== FILE =====================================
test.l
foo a b c d e f g h i j k l =
  (letrec
     v = (* u (+ i j))
     u = (+ k l)
     w = (* u (+ g h))
     x = (* w (+ e f))
   in
     (+ b (if x v 0)))

main = nil
==================================== OUTPUT ====================================
foo a !b c d !e !f !g !h i j !k !l = (letrec 
                                        v = (* u (+ i j))
                                        !u = (+ k l)
                                        !w = (* u (+ g h))
                                        !x = (* w (+ e f))
                                      in
                                        (+ b (if x 
                                                 v 
                                                 0)))
main = nil
================================== RETURN CODE =================================
0
