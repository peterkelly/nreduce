genlist i max =
(if (>= i max)
  nil
  (cons (reverse (numtostring (* 7 i))) (genlist (+ i 1) max)))

flatten lst =
(if lst
  (++ (head lst) (++ "\n" (flatten (tail lst))))
  nil)

mergesort cmp m =
(if (<= (len m) 1)
  m
  (letrec
    middle = (floor (/ (len m) 2))
    left = (prefix middle m)
    right = (skip middle m)
    left2 = (mergesort cmp left)
    right2 = (mergesort cmp right)
  in
    (merge (!x.!y.seq middle (strcmp x y)) left2 right2 nil)))

merge cmp xlst ylst out =
(if xlst
  (if ylst
    (letrec
      x = (head xlst)
      y = (head ylst)
     in
      (if (> (cmp x y) 0)
        (merge cmp xlst (tail ylst) (cons y out))
        (merge cmp (tail xlst) ylst (cons x out))))
    (merge cmp (tail xlst) ylst (cons (head xlst) out)))
  (if ylst
    (merge cmp xlst (tail ylst) (cons (head ylst) out))
    (reverse out)))

main args =
(letrec
  n = (if args
        (stringtonum (head args))
        1000)
  input = (genlist 0 n)
  sorted = (mergesort strcmp input)
in
  (flatten sorted))
