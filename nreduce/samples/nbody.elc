N = 1000
T = 100
deltaT = 0.1

init i =
(if (< i N)
  (cons (/ i N) (init (+ i 1)))
  nil)

printbodies bodies =
(if bodies
  (append " "
    (append (numtostring (head bodies))
      (append "\n"
        (printbodies (tail bodies)))))
  nil)

move x force =
(+ x (* 0.5 (* force (* deltaT deltaT))))

calcforce i bodies =
(letrec
  f1 =
  (if (> i 0)
    (letrec
      dx = (- (item i bodies) (item (- i 1) bodies))
     in
      (/ -1 (* dx dx)))
    0)
  f2 =
  (if (< i (- N 1))
    (letrec
      dx = (- (item i bodies) (item (+ i 1) bodies))
     in
      (/ 1 (* dx dx)))
    0)
 in
  (+ f1 f2))

updateNN i bodies =
(if (< i N)
  (letrec
    x = (item i bodies)
    force = (calcforce i bodies)
    newx = (move x force)
   in
    (cons newx (updateNN (+ i 1) bodies)))
  nil)

updateNNloop i bodies =
(if (= i T)
  "end\n"
  (letrec
    dist = (averageDistance 0 bodies 0)
    newbodies = (updateNN 0 bodies)
   in
    (append (numtostring i)
      (append ": "
        (append
          (numtostring dist)
          (append "\n"
            (updateNNloop (+ i 1) newbodies)))))))

averageDistance i bodies total =
(if (< i (- N 1))
  (letrec
    dist = (- (item (+ i 1) bodies) (item i bodies))
   in
    (averageDistance (+ i 1) bodies (+ total dist)))
  (/ total (- N 1)))

main =
(letrec
  bodies = (init 0)
  finalbodies = (updateNNloop 0 bodies)
 in
  finalbodies)
//  (printbodies finalbodies))

